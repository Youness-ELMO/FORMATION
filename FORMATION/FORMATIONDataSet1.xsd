<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FORMATIONDataSet1" targetNamespace="http://tempuri.org/FORMATIONDataSet1.xsd" xmlns:mstns="http://tempuri.org/FORMATIONDataSet1.xsd" xmlns="http://tempuri.org/FORMATIONDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FORMATIONConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FORMATIONConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FORMATION.Properties.Settings.GlobalReference.Default.FORMATIONConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="academieTableAdapter" GeneratorDataComponentClassName="academieTableAdapter" Name="academie" UserDataComponentName="academieTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FORMATIONConnectionString (Settings)" DbObjectName="FORMATION.dbo.academie" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[academie] WHERE (([IdAcademi] = @Original_IdAcademi) AND ((@IsNull_nomAcademie = 1 AND [nomAcademie] IS NULL) OR ([nomAcademie] = @Original_nomAcademie)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdAcademi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdAcademi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomAcademie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomAcademie" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[academie] ([IdAcademi], [nomAcademie]) VALUES (@IdAcademi, @nomAcademie);
SELECT IdAcademi, nomAcademie FROM academie WHERE (IdAcademi = @IdAcademi)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdAcademi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdAcademi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomAcademie" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdAcademi, nomAcademie FROM dbo.academie</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[academie] SET [IdAcademi] = @IdAcademi, [nomAcademie] = @nomAcademie WHERE (([IdAcademi] = @Original_IdAcademi) AND ((@IsNull_nomAcademie = 1 AND [nomAcademie] IS NULL) OR ([nomAcademie] = @Original_nomAcademie)));
SELECT IdAcademi, nomAcademie FROM academie WHERE (IdAcademi = @IdAcademi)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdAcademi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdAcademi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nomAcademie" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdAcademi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdAcademi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_nomAcademie" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nomAcademie" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nomAcademie" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdAcademi" DataSetColumn="IdAcademi" />
              <Mapping SourceColumn="nomAcademie" DataSetColumn="nomAcademie" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FORMATIONDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="FORMATIONDataSet1" msprop:Generator_DataSetName="FORMATIONDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="academie" msprop:Generator_RowEvHandlerName="academieRowChangeEventHandler" msprop:Generator_RowDeletedName="academieRowDeleted" msprop:Generator_RowDeletingName="academieRowDeleting" msprop:Generator_RowEvArgName="academieRowChangeEvent" msprop:Generator_TablePropName="academie" msprop:Generator_RowChangedName="academieRowChanged" msprop:Generator_RowChangingName="academieRowChanging" msprop:Generator_TableClassName="academieDataTable" msprop:Generator_RowClassName="academieRow" msprop:Generator_TableVarName="tableacademie" msprop:Generator_UserTableName="academie">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdAcademi" msprop:Generator_ColumnPropNameInRow="IdAcademi" msprop:Generator_ColumnPropNameInTable="IdAcademiColumn" msprop:Generator_ColumnVarNameInTable="columnIdAcademi" msprop:Generator_UserColumnName="IdAcademi" type="xs:int" />
              <xs:element name="nomAcademie" msprop:Generator_ColumnPropNameInRow="nomAcademie" msprop:Generator_ColumnPropNameInTable="nomAcademieColumn" msprop:Generator_ColumnVarNameInTable="columnnomAcademie" msprop:Generator_UserColumnName="nomAcademie" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:academie" />
      <xs:field xpath="mstns:IdAcademi" />
    </xs:unique>
  </xs:element>
</xs:schema>